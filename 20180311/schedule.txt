**********************************************************************************
20180311	Sunday
	C Primer Plus 看完第9章 函数，第8章 字符输入/输出和输入确认只是大概
浏览一遍，以后再细看。
	
临时事项：
	查看盘古开发板使用手册，浏览到第6章 SysTick简介，新建了一个led工程，
略微了解了STM32编程中的应用层，中间层及驱动层。

PS:下午装USB转串口驱动折腾了两个小时左右，真是无FUCK说！！！



**********************************************************************************
20180312	Monday
	C Primer Plus 看完第10章 数组和指针，大概了解基本概念，但是对二维数
组中指针的引用理解还是有点模糊。

变长数组(VLA)
	感觉挺奇葩，不是很理解。

复合文字
	这一概念感觉类似于二维数组中的指向数组的指针。

数组内容的保护
	对数组内容或者指向数组的指针使用关键字const使其无法被修改，何时可以
修改，能修改什么东西。指针赋值和const的一些规则挺有意思，需要再熟悉下。



**********************************************************************************
20180313	Tuesday
	C Primer Plus 看完第11章 字符串和字符串函数。字符串的几种初始化方法，数
组和指针及其差别。

	字符串可以理解为是一个存放了很多字符的数组，既然是数组那么就可以通过指针
来读取地址中的内容。
	需要了解字符串的几种定义，如果是用数组来定义字符串，那么数组的长度一定要
比字符串的长度多1，因为字符串最后有个结束符'\0'。同时用数组定义字符串时要在
数组中把'\0'加上，如果定义时不加上这个数据就成为了一个字符数组，而不是一个字
符串。

字符串数组
	类似于二维数组，可以理解为是由几个指针组成的数组，每个指针分别指向每一行
(即每一个字符串)第一个数据的地址。

字符串的输出/输出
	即与用户或者文件的交互，主要是标准库的6个基本函数。
	输入函数：gets(); fgets(); scanf()；
	输出函数: puts(); fputs(); printf();
	每个函数有其对应的应用场景，通过基本函数也可以构建自己想要的输入/输出函数	
	
字符串函数
	对字符串进行操作的函数，比如求字符串长度，copy,或者比较之类的。	

	
	
**********************************************************************************
20180314	Wednesday	
	C Primer Plus 看完第12章 存储类，链接和内存管理。大概了解变量的作用域，内存
何时被分配和清除。所谓链接即能否被其他函数或者文件调用。

	自动变量/局部变量：只在代码块内可见，调用使用该变量的程序开始时创建，结束后清除；
	外部变量/全局变量：在程序运行整个过程中可见，可被任何函数或文件引用。若在定义时
加上了static修饰则变成静态变量，只可在定义该变量的文件中引用。

5个存储类说明符：
	auto, register, static, extern, typedef
	
内存分配
	使用malloc()或者calloc()函数来分配内存，使用free()函数释放内存，注意内存溢出导致
内存泄漏；

类型限定词
	const, volatile, restrict

