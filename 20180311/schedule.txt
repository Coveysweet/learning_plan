**********************************************************************************
20180311	Sunday
	C Primer Plus 看完第9章 函数，第8章 字符输入/输出和输入确认只是大概
浏览一遍，以后再细看。
	
临时事项：
	查看盘古开发板使用手册，浏览到第6章 SysTick简介，新建了一个led工程，
略微了解了STM32编程中的应用层，中间层及驱动层。

PS:下午装USB转串口驱动折腾了两个小时左右，真是无FUCK说！！！



**********************************************************************************
20180312	Monday
	C Primer Plus 看完第10章 数组和指针，大概了解基本概念，但是对二维数
组中指针的引用理解还是有点模糊。

变长数组(VLA)
	感觉挺奇葩，不是很理解。

复合文字
	这一概念感觉类似于二维数组中的指向数组的指针。

数组内容的保护
	对数组内容或者指向数组的指针使用关键字const使其无法被修改，何时可以
修改，能修改什么东西。指针赋值和const的一些规则挺有意思，需要再熟悉下。



**********************************************************************************
20180313	Tuesday
	C Primer Plus 看完第11章 字符串和字符串函数。字符串的几种初始化方法，数
组和指针及其差别。

	字符串可以理解为是一个存放了很多字符的数组，既然是数组那么就可以通过指针
来读取地址中的内容。
	需要了解字符串的几种定义，如果是用数组来定义字符串，那么数组的长度一定要
比字符串的长度多1，因为字符串最后有个结束符'\0'。同时用数组定义字符串时要在
数组中把'\0'加上，如果定义时不加上这个数据就成为了一个字符数组，而不是一个字
符串。

字符串数组
	类似于二维数组，可以理解为是由几个指针组成的数组，每个指针分别指向每一行
(即每一个字符串)第一个数据的地址。

字符串的输出/输出
	即与用户或者文件的交互，主要是标准库的6个基本函数。
	输入函数：gets(); fgets(); scanf()；
	输出函数: puts(); fputs(); printf();
	每个函数有其对应的应用场景，通过基本函数也可以构建自己想要的输入/输出函数	
	
字符串函数
	对字符串进行操作的函数，比如求字符串长度，copy,或者比较之类的。	

	
	
**********************************************************************************
20180314	Wednesday	
	C Primer Plus 看完第12章 存储类，链接和内存管理。大概了解变量的作用域，内存
何时被分配和清除。所谓链接即能否被其他函数或者文件调用。

	自动变量/局部变量：只在代码块内可见，调用使用该变量的程序开始时创建，结束后清除；
	外部变量/全局变量：在程序运行整个过程中可见，可被任何函数或文件引用。若在定义时
加上了static修饰则变成静态变量，只可在定义该变量的文件中引用。

5个存储类说明符：
	auto, register, static, extern, typedef
	
内存分配
	使用malloc()或者calloc()函数来分配内存，使用free()函数释放内存，注意内存溢出导致
内存泄漏；

类型限定词
	const, volatile, restrict


	
**********************************************************************************
20180315	Thursday	
	C Primer Plus 第14章  结构和其他数据形式看到第八节， 第13章 文件输入/输出 大概浏
览一遍，以后结合第八章详看。
	大概了解了结构的定义，结构的作为参数或返回值，结构和指针的联系。

吐槽：
	发现自从讲了指针之后，各种东西都跟指针联系在了一起，对内存的操作是越来越复杂，功
能看似能写的越来越强大，但真的是有点绕，得多敲一些代码来练习和测试。另外，关于对文件
操作这一块儿看的是真的烦，所以都只是大概浏览一遍，具体实现得找个时间看看怎么操作和修
改文件的。



**********************************************************************************
20180316	Friday
	FreeRTOS实用教程看完第三章，队列的创建。
	
PS:晚上下班跟别的公司打比赛是真的累，输的也是惨。。。。	



**********************************************************************************
20180317	Saturday
	C Primer Plus 第14章  结构和其他数据形式，第十五章 位操作，  第十六章 C预处理器
和C库看完，第十七章 高级数据表示 看完第二节从数组到链表。

	其实最近的几章都只是大概的过了一遍，了解了一下基本概念。像第十四章类似于是对数据
类型进行了一些扩充，定义结构体，联合体或者枚举类型让我们能够更灵活将基本类型的数据进
行分类或者整体的处理。指针这一概念是真的重要，自从接触以来后面所有的东西都涉及到了指
针，这大概是对数据处理最重要的东西了吧。
	
	第十五章怎么说呢，其实就是按bit来操作数据，因为有些东西只有两种状态，非黑即白，如
果定义基本类型的话很多内存空间就被浪费了，毕竟基本数据类型最少都占用了一个字节。 其实
这一章如果接触到汇编的话到还好理解，写的汇编程序里面基本都是对位进行操作的。然后看C的
底层代码，其实也可以看到好多对位进行操作的例子。按书上的意思就是主要用于于硬件交互或者
说嵌入式这一块吧。可以结合驱动层的代码仔细看看。

	第十六章主要说了一些怎么翻译C程序。这一章也就大概浏览了一遍，知道标准库及一些通用
工具库。然后如果在一个项目里面有多个源文件及自己定义的头文件的话，就明白#include的意义
了。感觉对#define印象比较深刻，一般而言都是用它来定义一些常量，然而其实是让C在预处理的
时候将自己所设定的值来替代一个名称而已。

	第十七章高级数据表示 就只是大概了解了一下链表，大概的感觉吧是更好的利用指针以及内存
分配函数来帮自己合理的规划和使用内存，更灵活的处理数据，算是设计整个程序的结构吧。挺有
难度的一章，要把前面多有的知识点都结合起来才能好好的理解。



**********************************************************************************
总结：
	今天算是这周计划的最后一天了，本来以为这周的计划可以很轻松的完成，然而进行到指针
之后就发现进度就变的很慢了。整体来说还算可以吧，虽然并没有全部完成，(′д｀ )…彡…彡。。
书是差不多按计划的看完了，但是理解还没有那么到位，不过想在一周内有个很深的理解还是挺
难的。下周就多敲些代码来巩固下这周所学到的知识点吧。也希望自己能够继续坚持下去，不要
半途而废。主要还是要找到学习的乐趣，不然看着看着就懈怠了，也难以进行下去了。